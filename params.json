{"name":"AD_Deriv","tagline":"Automatic Differentiation Tools for Matlab","body":"*Deriv* - A set of Matlab tools for Automatic Differentiation\r\n=======\r\n\r\n\r\n \r\nOverview\r\n--------\r\n\r\nThis directory contains a set of tools for performing automatic differentiation\r\nin Matlab.  Automatic differentiation is performed using Matlab's operator\r\noverloading.  The intention is to replace *double* objects with *Deriv* objects\r\n(which contain both values of the variable (acting as a double) as well as the\r\nderivative of the variable with respect to the parameter(s) of interest.\r\nTo perform the derivative calculations in Matlab, Deriv must overload any of \r\nthe *double* class operators that Matlab encounters when executing your\r\nfunction.  The value of the derivative of any intermediate calculation can\r\nbe extracted using the _Get_deriv_ function.  \r\n\r\nA differentiating feature of *Deriv* is that it goes back to the continuous \r\nform of a problem to compute derivatives of non-differentiable objects.  For\r\nexample, we avoid differentiation of the time-step selection process in *ode23*\r\nby simultaneously computing the solution of the original and differentiated\r\node in our own algorithm.  This includes new algorithms for implementation \r\nof Matlab functions such as *interp1*, *QR*, etc., which would be approximated by\r\nfinite differences in other automatic differentiation algorithms.\r\n\r\nRepository Contents\r\n--------\r\n* _Deriv_  A Matlab class (this can stand alone and must be in your path) that implements automatic differentiation by operator overloading.  All of the overloaded _double_ functions are contained in this file.\r\n\r\n* _Dzeros_  A Matlab function that takes care of the preallocation problem.  Any preallocated variables in your differentiated function that depend on the independent variable must be replaced with this Dzeros function for now.  A simple global change and replace zeros->Dzeros would work, though more efficiency can be introduced by selectively replacing only those functions that are affected by the independent variable.\r\n\r\n* _Get_gradient_  A Matlab function that uses the forward mode of automatic differentiation to compute the gradient of a function.\r\n\r\n* _LICENSE.md_  The LGPL license.\r\n\r\n* _README.md_  This file.\r\n\r\n* _Set_variable_  A Matlab function that defines the independent variable for automatic differentiation.\r\n\r\n* _test_Deriv_  A series of unit tests for _Deriv_.\r\n\r\n\r\nBasic Introduction\r\n--------\r\n\r\nTo illustrate how this works, we use the function *Set_variable* to define\r\nthe variable used as the independent variable.  Any number of intermediate\r\ncalculations (with or without using alpha) can be performed.  The derivative\r\nof those calculations with respect to alpha can be extracted with the \r\nembedded *Get_deriv* method (hidden inside *Deriv*).\r\n\r\n```matlab\r\n    >> alpha = Set_variable(7);\r\n    >>\r\n    >> % Perform intermediate calculations to arrive at the desired output.\r\n    >>\r\n    >> output = exp((alpha-5)^3)*sin(alpha);\r\n    >> f = Get_value(output);  % extracts the value of the output\r\n    >> d = Get_deriv(output);  % extracts the derivative of the output wrt alpha\r\n    >>\r\n    >> disp(f)\r\n       1.9584e+03\r\n   \r\n    >> disp(d)\r\n       2.5749e+04\r\n````\r\n\r\nDevelopment Tasks\r\n--------\r\n- [x] overload basic double operators\r\n- [x] overload matrix functions\r\n- [ ] overload ode/dae solvers\r\n- [ ] overload interp options\r\n\r\n- [x] scalar variable, forward mode\r\n- [ ] vector variable, forward mode\r\n- [ ] vector variable, reverse mode\r\n- [ ] Jacobian-vector product, reverse mode\r\n\r\n- [ ] user documentation (this README.md)\r\n- [ ] algorithm documentation (paper, wiki)\r\n\r\n\r\nAuthor\r\n--------\r\nJeff Borggaard, Interdisciplinary Center for Applied Mathematics, Virginia Tech\r\njborggaard@vt.edu\r\n\r\nLicense\r\n--------\r\nThese files are provided under the Gnu LGPL License.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}